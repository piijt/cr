{"version":3,"sources":["Components/Cards/Cards.jsx","api/index.js","Components/Chart/Chart.jsx","Components/CountryPicker/CountryPicker.jsx","App.js","index.js","Components/CountryPicker/CountryPicker.module.css","App.module.css","Components/Cards/Cards.module.css","Components/Chart/Chart.module.css","images/Asset 3.png"],"names":["Cards","data","confirmed","recovered","deaths","lastUpdate","className","styles","container","Grid","spacing","justify","item","component","Card","xs","md","cx","card","infected","CardContent","Typography","heading","gutterBottom","variant","start","end","value","duration","separator","infectedCases","date","Date","toDateString","divider","recoveredCases","deathCases","url","fetchData","country","a","modifiedUrl","axios","get","console","log","fetchDailyData","modifiedData","map","dailyData","total","reportDate","fetchCountries","countries","name","Chart","useState","setDailyData","useEffect","fetchAPI","lineChart","length","options","legend","labels","fontColor","title","display","scales","yAxes","ticks","beginAtZero","xAxes","datasets","label","borderColor","fill","backgroundColor","barChart","text","CountryPicker","handleCountryChange","fetchedCountries","setFetchedCountries","bgColor","FormControl","formControl","NativeSelect","style","color","defaultValue","onChange","e","target","i","key","App","state","fetchedData","setState","this","image","alt","src","logo","currentCountry","React","Component","ReactDOM","render","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.8d302a0d.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Card, CardContent, Typography, Grid } from '@material-ui/core';\r\nimport CountUp from 'react-countup';\r\nimport styles from './Cards.module.css';\r\nimport cx from 'classnames';\r\n\r\nconst Cards = ( { data: { confirmed, recovered, deaths, lastUpdate } } ) => {\r\n\r\n  if(!confirmed) {\r\n    return 'Loading data...'\r\n  }\r\n\r\n  return(\r\n    <div className={styles.container}>\r\n      <Grid container spacing={3} justify=\"center\">\r\n        <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.infected)}>\r\n          <CardContent>\r\n            <Typography className={styles.heading} gutterBottom>Infected</Typography>\r\n            <Typography variant=\"h5\">\r\n              <CountUp\r\n                start={0}\r\n                end={confirmed.value}\r\n                duration={2.5}\r\n                separator=\".\"/>\r\n            </Typography>\r\n            <div className={styles.infectedCases}></div>\r\n            <Typography className={styles.date}>{new Date(lastUpdate).toDateString()}</Typography>\r\n            <Typography variant=\"body2\">Number of Active cases</Typography>\r\n          </CardContent>\r\n        </Grid>\r\n        <div className={styles.divider}></div>\r\n        <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.recovered)}>\r\n          <CardContent>\r\n            <Typography className={styles.heading} gutterBottom>Recovered People</Typography>\r\n            <Typography variant=\"h5\">\r\n              <CountUp\r\n                start={0}\r\n                end={recovered.value}\r\n                duration={2.5}\r\n                separator=\".\"/>\r\n            </Typography>\r\n            <div className={styles.recoveredCases}></div>\r\n            <Typography className={styles.date}>{new Date(lastUpdate).toDateString()}</Typography>\r\n            <Typography variant=\"body2\">Number of recoveries from COVID-19</Typography>\r\n          </CardContent>\r\n        </Grid>\r\n        <div className={styles.divider}></div>\r\n        <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.deaths)}>\r\n          <CardContent>\r\n            <Typography className={styles.heading} gutterBottom>Deaths</Typography>\r\n            <Typography variant=\"h5\">\r\n              <CountUp\r\n                start={0}\r\n                end={deaths.value}\r\n                duration={2.5}\r\n                separator=\".\"/>\r\n            </Typography>\r\n            <div className={styles.deathCases}></div>\r\n            <Typography className={styles.date}>{new Date(lastUpdate).toDateString()}</Typography>\r\n            <Typography variant=\"body2\">Number of Deaths caused by COVID-19</Typography>\r\n          </CardContent>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Cards;\r\n","import axios from 'axios';\r\n\r\nconst url = 'https://covid19.mathdro.id/api';\r\n\r\nexport const fetchData = async (country) => {\r\n  let modifiedUrl = url;\r\n\r\n  if(country) {\r\n    modifiedUrl = `${url}/countries/${country}`;\r\n  }\r\n\r\n  try {\r\n    const { data: { confirmed, recovered, deaths, lastUpdate } } = await axios.get(modifiedUrl);\r\n\r\n    // const modifiedData = {\r\n    //   confirmed: data.confirmed,\r\n    //   recovered: data.recovered,\r\n    //   deaths: data.deaths,\r\n    //   lastUpdate: data.lastUpdate\r\n    // }\r\n\r\n    return { confirmed, recovered, deaths, lastUpdate };\r\n  } catch (e) {\r\n    console.log(e)\r\n  }\r\n}\r\n\r\nexport const fetchDailyData = async () => {\r\n  try {\r\n    const { data } = await axios.get(`${url}/daily`);\r\n    const modifiedData = data.map((dailyData) => ({\r\n      confirmed: dailyData.confirmed.total,\r\n      deaths: dailyData.deaths.total,\r\n      date: dailyData.reportDate,\r\n    }));\r\n    return modifiedData;\r\n  } catch (e) {\r\n    console.log(e)\r\n  }\r\n}\r\n\r\nexport const fetchCountries = async () => {\r\n  try {\r\n    const { data: { countries } } = await axios.get(`${url}/countries`);\r\n    return countries.map((country) => country.name);\r\n  } catch (e) {\r\n    console.log(e)\r\n  }\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport { fetchDailyData } from '../../api'\r\nimport { Line, Bar } from 'react-chartjs-2';\r\n\r\nimport styles from './Chart.module.css';\r\n\r\nconst Chart = ({ data: { confirmed, deaths, recovered }, country }) => {\r\n  const [dailyData, setDailyData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchAPI = async () => {\r\n       setDailyData(await fetchDailyData());\r\n    }\r\n    fetchAPI();\r\n  }, []);\r\n\r\n  const lineChart = (\r\n    dailyData.length\r\n      ? (\r\n        <Line\r\n        options={{\r\n          legend: {\r\n               labels: {\r\n                    fontColor: '#f1f1f1'\r\n                   }\r\n                },\r\n          title: {\r\n              display: true,\r\n              fontColor: '#f1f1f1',\r\n          },\r\n          scales: {\r\n              yAxes: [{\r\n                  ticks: {\r\n                      beginAtZero:true,\r\n                      fontColor: '#f1f1f1'\r\n                  },\r\n              }],\r\n            xAxes: [{\r\n                  ticks: {\r\n                      fontColor: '#f1f1f1'\r\n                  },\r\n              }]\r\n          }\r\n        }}\r\n        data={{\r\n          labels: dailyData.map(({ date }) => date),\r\n          datasets:[{\r\n            data: dailyData.map(({ confirmed }) => confirmed),\r\n            label: 'Infected',\r\n            borderColor: '#02a8b5',\r\n            fill: false\r\n          }, {\r\n            data: dailyData.map(({ deaths }) => deaths),\r\n            label: 'Deaths',\r\n            borderColor: 'red',\r\n            backgroundColor: '#ff5b5b',\r\n            fill: true\r\n          }],\r\n        }}\r\n      />) : null\r\n  );\r\n\r\n  console.log(confirmed, recovered, deaths);\r\n\r\n  const barChart = (\r\n    confirmed\r\n      ? (\r\n        <Bar\r\n          data={{\r\n            labels: ['Infected', 'Recovered', 'Deaths'],\r\n            datasets: [{\r\n              label: 'People',\r\n              backgroundColor: ['#02a8b5', ' #10c469', '#ff5b5b'],\r\n              data: [confirmed.value, recovered.value, deaths.value]\r\n            }],\r\n          }}\r\n          options={{\r\n            legend: { display: false },\r\n            title: {display: true, text: `Current state in ${country}` },\r\n          }}\r\n        />\r\n      ) : null\r\n  );\r\n\r\n  return(\r\n    <div className={styles.container}>\r\n      {country ? barChart : lineChart}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Chart;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { NativeSelect, FormControl } from '@material-ui/core';\r\nimport styles from './CountryPicker.module.css';\r\nimport { fetchCountries } from '../../api';\r\n\r\nconst CountryPicker = ({ handleCountryChange }) => {\r\n  const [fetchedCountries, setFetchedCountries] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchAPI = async () => {\r\n      setFetchedCountries(await fetchCountries());\r\n    }\r\n    fetchAPI();\r\n  }, [setFetchedCountries]);\r\n\r\n\r\n  return(\r\n    <div className={styles.bgColor}>\r\n    <FormControl className={styles.formControl}>\r\n      <NativeSelect style={{color: \"#f1f1f1\"}} className={styles.formControl} defaultValue=\"\" onChange={(e) => handleCountryChange(e.target.value)}>\r\n        <option value=\"\">Global</option>\r\n        {fetchedCountries.map((country, i) => <option style={{color: \"#333\"}} key={i} value={country}>{country}</option>)}\r\n      </NativeSelect>\r\n    </FormControl>\r\n  </div>\r\n  )\r\n}\r\n\r\nexport default CountryPicker;\r\n","import React from 'react';\r\n\r\nimport { Cards, Chart, CountryPicker } from './Components';\r\nimport { Typography } from '@material-ui/core';\r\nimport styles from './App.module.css';\r\nimport { fetchData } from './api';\r\nimport logo from './images/Asset 3.png';\r\n\r\n\r\nclass App extends React.Component {\r\n\r\n  state = {\r\n    data: {},\r\n    country: '',\r\n  }\r\n\r\n  async componentDidMount() {\r\n    const fetchedData = await fetchData();\r\n    this.setState({ data: fetchedData })\r\n  }\r\n\r\n  handleCountryChange = async (country) => {\r\n    //fetch data\r\n    const fetchedData = await fetchData(country);\r\n    //set the state\r\n    this.setState({ data: fetchedData, country: country });\r\n  }\r\n\r\n  render() {\r\n    const { data, country } = this.state\r\n    return(\r\n      <div className={styles.container}>\r\n        <img className={styles.image} alt=\"corona-stats\" src={logo} />\r\n        <div className={styles.currentCountry}>\r\n          <Typography>\r\n            Displaying {country ? country : \"Global\"} Stats\r\n          </Typography>\r\n        </div>\r\n        <Cards data={data}/>\r\n        <CountryPicker handleCountryChange={this.handleCountryChange}/>\r\n        <Chart data={data} country={country}/>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"CountryPicker_formControl__2vF-h\",\"bgColor\":\"CountryPicker_bgColor__2DzhU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__3IUS-\",\"Modal\":\"App_Modal__zhm1i\",\"currentCountry\":\"App_currentCountry__36ANo\",\"image\":\"App_image__ZmNpS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__1xtTw\",\"divider\":\"Cards_divider__36dzf\",\"card\":\"Cards_card__13c3x\",\"date\":\"Cards_date__2dxgC\",\"heading\":\"Cards_heading__3rtDW\",\"recoveredCases\":\"Cards_recoveredCases__2aWlE\",\"deathCases\":\"Cards_deathCases__1-KOu\",\"infectedCases\":\"Cards_infectedCases__3XyJq\",\"muted\":\"Cards_muted__2JEu_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__1LBl_\",\"formControl\":\"Chart_formControl__1nkDt\"};","module.exports = __webpack_public_path__ + \"static/media/Asset 3.a6a46291.png\";"],"sourceRoot":""}